fire_palette_1 = ((0, 0, 0), (39, 3, 42), (75, 8, 61), (115, 17, 68), (137, 12, 56), (171, 10, 42), (190, 32, 40), (207, 73, 44), (227, 100, 51), (227, 136, 78), (236, 181, 95), (238, 214, 123), (244, 239, 174), (255, 253, 217), (251, 251, 242))
fire_palette_2 = ((7, 7, 7), (31, 7, 7), (47, 15, 7), (71, 15, 7), (87, 23, 7), (103, 31, 7), (119, 31, 7), (143, 39, 7), (159, 47, 7), (175, 63, 7), (191, 71, 7), (199, 71, 7), (223, 79, 7), (223, 87, 7), (223, 87, 7), (215, 95, 7), (215, 95, 7), (215, 103, 15), (207, 111, 15), (207, 119, 15), (207, 127, 15), (207, 135, 23), (199, 135, 23), (199, 143, 23), (199, 151, 31), (191, 159, 31), (191, 159, 31), (191, 167, 39), (191, 167, 39), (191, 175, 47), (183, 175, 47), (183, 183, 47), (183, 183, 55), (207, 207, 111), (223, 223, 159), (239, 239, 199), (255, 255, 255))
fire_palette_3 = ((0, 0, 0), (36, 8, 34), (117, 26, 55), (238, 108, 57), (247, 201, 89))
fire_palette_4 = ((0, 0, 0), (97, 28, 7), (145, 0, 0), (178, 34, 34), (237, 129, 17), (255, 187, 0), (255, 229, 3))
fire_palette_5 = ((0, 0, 0), (13, 50, 77), (18, 67, 102), (14, 113, 156), (255, 249, 207), (255, 209, 56), (255, 138, 48))
palletes = (fire_palette_1, fire_palette_2, fire_palette_3, fire_palette_4, fire_palette_5)

oneS = [
    '001',
    '011',
    '101',
    '001',
    '001'
]
twoS = [
    '111',
    '001',
    '111',
    '100',
    '111'
]
threeS = [
    '111',
    '001',
    '111',
    '001',
    '111'
]
fourS = [
    '101',
    '101',
    '111',
    '001',
    '001'
]
fiveS = [
    '111',
    '100',
    '111',
    '001',
    '111'
]
sixS = [
    '111',
    '100',
    '111',
    '101',
    '111'
]
sevenS = [
    '111',
    '001',
    '010',
    '100',
    '100'
]
eightS = [
    '111',
    '101',
    '111',
    '101',
    '111'
]
nineS = [
    '111',
    '101',
    '111',
    '001',
    '111'
]
zeroS = [
    '111',
    '101',
    '101',
    '101',
    '111'
]
empty_struct = [
    '0000',
    '0000',
    '0000',
    '0000'
]
cross = [
    '1001',
    '0110',
    '0110',
    '1001'
]
zero = [
    '0110',
    '1001',
    '1001',
    '0110'
]
active_cross = [
    '1001',
    '0110',
    '0100',
    '1001'
]
active_zero = [
    '0110',
    '1001',
    '1011',
    '0110'
]
corner = [
    '0000',
    '0110',
    '0110',
    '0000'
]
hline = [
    '1111111111111111',
    '1111111111111111'
]
vline = [
    '11',
    '11',
    '11',
    '11',
    '11',
    '11',
    '11',
    '11',
    '11',
    '11',
    '11',
    '11',
    '11',
    '11',
    '11',
    '11'
]
sdiagonal = [
    '**************11',
    '*************111',
    '************111*',
    '***********111**',
    '**********111***',
    '*********111****',
    '********111*****',
    '*******111******',
    '******111*******',
    '*****111********',
    '****111*********',
    '***111**********',
    '**111***********',
    '*111************',
    '111*************',
    '11**************'
]
bdiagonal = [
    '11**************',
    '111*************',
    '*111************',
    '**111***********',
    '***111**********',
    '****111*********',
    '*****111********',
    '******111*******',
    '*******111******',
    '********111*****',
    '*********111****',
    '**********111***',
    '***********111**',
    '************111*',
    '*************111',
    '**************11'
]
tie = [
    '0010000000000100',
    '0100000000000010',
    '1000000000000001',
    '0000000000000000',
    '0000000000000000',
    '0111000100011100',
    '0010000000010000',
    '0010000100011100',
    '0010000100010000',
    '0010000100011100',
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '1000000000000001',
    '0100000000000010',
    '0010000000000100'
]
endgame = [
    '0000000000000000',
    '1101100100011011',
    '1001001010101010',
    '1101001010110011',
    '0101001010110010',
    '1101100100101011',
    '0000000000000000',
    '0000000000000000'
]
db = {
    '0': 'zeroS',
    '1': 'oneS',
    '2': 'twoS',
    '3': 'threeS',
    '4': 'fourS',
    '5': 'fiveS',
    '6': 'sixS',
    '7': 'sevenS',
    '8': 'eightS',
    '9': 'nineS'
}
q1 = [
    '010',
    '101',
    '101',
    '111',
    '011'
]
w1 = [
    '10101',
    '10101',
    '10101',
    '10101',
    '01010'
]
e1 = [
    '111',
    '100',
    '111',
    '100',
    '111'
]
r1 = [
    '011',
    '101',
    '110',
    '110',
    '101'
]
t1 = [
    '111',
    '010',
    '010',
    '010',
    '010'
]
y1 = [
    '101',
    '101',
    '010',
    '010',
    '010'
]
u1 = [
    '101',
    '101',
    '101',
    '101',
    '111'
]
i1 = [
    '010',
    '000',
    '010',
    '010',
    '010'
]
o1 = [
    '010',
    '101',
    '101',
    '101',
    '010'
]
p1 = [
    '110',
    '101',
    '110',
    '100',
    '100'
]
a1 = [
    '010',
    '101',
    '111',
    '101',
    '101'
]
s1 = [
    '111',
    '100',
    '111',
    '001',
    '111'
]
d1 = [
    '110',
    '101',
    '101',
    '101',
    '110'
]
f1 = [
    '111',
    '100',
    '111',
    '100',
    '100'
]
g1 = [
    '0110',
    '1000',
    '1011',
    '1001',
    '0110'
]
h1 = [
    '100',
    '100',
    '111',
    '101',
    '101'
]
j1 = [
    '111',
    '010',
    '010',
    '010',
    '110'
]
k1 = [
    '101',
    '101',
    '110',
    '101',
    '101'
]
l1 = [
    '100',
    '100',
    '100',
    '100',
    '111'
]
z1 = [
    '111',
    '001',
    '010',
    '100',
    '111'
]
x1 = [
    '101',
    '010',
    '010',
    '010',
    '101'
]
c1 = [
    '111',
    '100',
    '100',
    '100',
    '111'
]
v1 = [
    '101',
    '101',
    '101',
    '101',
    '010'
]
b1 = [
    '110',
    '101',
    '110',
    '101',
    '110'
]
n1 = [
    '10001',
    '11001',
    '10101',
    '10011',
    '10001'
]
m1 = [
    '01010',
    '10101',
    '10101',
    '10101',
    '10101'
]
upcursor = [
    '0000000000000000',
    '0000000000000100',
    '0000000000001010',
    '0000000000000000',
    '0000000000000000'
]
downcursor = [
    '0000000000000000',
    '0000000000000000',
    '0000000000000000',
    '0000000000001010',
    '0000000000000100',
    '0000000000000000'
]
main_cursor = [
    '00000',
    '01110',
    '01110',
    '01110',
    '00000'
]
all_figures = [
    'oneS',
    'twoS',
    'threeS',
    'fourS',
    'fiveS',
    'sixS',
    'sevenS',
    'eightS',
    'nineS',
    'zeroS',
    'empty_struct',
    'cross',
    'zero',
    'active_cross',
    'active_zero',
    'corner',
    'hline',
    'vline',
    'sdiagonal',
    'bdiagonal',
    'tie',
    'endgame'
]
empty_matrix = [
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
]


def draw_figure(x, y, figure, matrix):
    x0, y0 = 5 * x + 1, 5 * y + 1
    if 'str' in str(type(figure)):
        figure = eval(f'{figure}')
    if len(figure) == 4:
        for i in range(y0, y0 + 4):
            for q in range(x0, x0 + 4):
                x1, y1 = q % 5 - 1, i % 5 - 1
                if figure[y1][x1] != '*':
                    matrix[i][q] = int(figure[y1][x1])
    elif len(figure) == 16 and len(figure[0]) == 16:
        for i in range(16):
            for q in range(16):
                if figure[i][q] != '*':
                    matrix[i][q] = int(figure[i][q])
    elif len(figure) == 2 and len(figure[0]) == 16:
        y1 = 0
        for i in range(y + 2, y + 4):
            for q in range(16):
                if figure[y1][q] != '*':
                    matrix[i][q] = int(figure[y1][q])
            y1 += 1
    elif len(figure) == 16 and len(figure[0]) == 2:
        for i in range(16):
            x1 = 0
            for q in range(x + 2, x + 4):
                if figure[i][x1] != '*':
                    matrix[i][q] = int(figure[i][x1])
                x1 += 1
    else:
        x1, y1 = 0, 0
        for i in range(y, len(figure)):
            for q in range(x, len(figure[i])):
                matrix[i][q] = int(figure[y1][x1])
                x1 += 1
            y1 += 1
            x1 = 0
    
    
def from_num_to_figure(num):
        ls = [db[i] for i in str(num)]
        ended_matrix = []
        for i in range(5):
            stt = '1110' if i in (1, 3) else '0000'
            for num1 in ls:
                stt = stt + eval(f'{num1}[{i}]') + '0'
            ended_matrix.append(stt[:-1])
        return endgame + ended_matrix


def from_str_to_figure(stt):
    ls = [f'{i.lower()}1' for i in stt]
    ended_matrix = []
    for i in range(5):
        st1 = '0'
        for num1 in ls:
            st1 = st1 + eval(f'{num1}[{i}]') + '0'
        ended_matrix.append(((st1[:-1] + "           ")[0:11] + main_cursor[i]).replace(' ', '0'))
    return upcursor + ended_matrix + downcursor

# TODO: Running String Func With Delta Speed
# TODO@: Tetris

def matrix_clear(m):
    return [[0 for _ in range(16)] for _ in range(16)]
